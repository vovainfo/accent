#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

//@skip-check module-region-empty
#Область ПрограммныйИнтерфейс
#КонецОбласти

#Область ОбработчикиСобытий
Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	Префикс = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Склад, "Префикс");
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаПоДокументу = СписокНоменклатуры.Итог("Сумма");
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	// проверяем достаточность товара, но ничего не резервируем и не списываем
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияТоваровУслугСписокНоменклатуры.Номенклатура КАК Номенклатура,
	|	СУММА(РеализацияТоваровУслугСписокНоменклатуры.Количество) КАК Количество,
	|	СУММА(РеализацияТоваровУслугСписокНоменклатуры.Сумма) КАК Сумма
	|ПОМЕСТИТЬ втТЧНоменклатура
	|ИЗ
	|	Документ.РеализацияТоваровУслуг.СписокНоменклатуры КАК РеализацияТоваровУслугСписокНоменклатуры
	|ГДЕ
	|	РеализацияТоваровУслугСписокНоменклатуры.Ссылка = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|	РеализацияТоваровУслугСписокНоменклатуры.Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТЧНоменклатура.Номенклатура КАК Номенклатура,
	|	втТЧНоменклатура.Количество КАК Количество
	|ПОМЕСТИТЬ втТЧТовары
	|ИЗ
	|	втТЧНоменклатура КАК втТЧНоменклатура
	|ГДЕ
	|	втТЧНоменклатура.Номенклатура.ВидНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Товар)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиНоменклатурыОстатки.КоличествоОстаток КАК КоличествоОстаток,
	|	ОстаткиНоменклатурыОстатки.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ втРНОстатки
	|ИЗ
	|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(&МоментВремени, Номенклатура В
	|		(ВЫБРАТЬ
	|			втТЧТовары.Номенклатура КАК Номенклатура
	|		ИЗ
	|			втТЧТовары КАК втТЧТовары)
	|	И Склад = &Склад) КАК ОстаткиНоменклатурыОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втТЧТовары.Номенклатура.Представление КАК НоменклатураПредставление,
	|	втТЧТовары.Количество - ЕстьNULL(втРНОстатки.КоличествоОстаток, 0) КАК Дефицит
	|ИЗ
	|	втТЧТовары КАК втТЧТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ втРНОстатки КАК втРНОстатки
	|		ПО втТЧТовары.Номенклатура = втРНОстатки.Номенклатура
	|ГДЕ
	|	втТЧТовары.Количество > ЕстьNULL(втРНОстатки.КоличествоОстаток, 0)";

	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("Склад", Склад);

	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ТекстСообщения = СтрШаблон(НСтр("ru='Недостаточно товара %1 в количестве %2'"),
			Выборка.НоменклатураПредставление, Выборка.Дефицит);
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , , , Отказ);
	КонецЦикла;
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ТЧНоменклатура = Запрос.МенеджерВременныхТаблиц.Таблицы.Найти("втТЧНоменклатура").ПолучитьДанные().Выгрузить();
	Движения.Продажи.Записывать = Истина;	
	Для Каждого стр Из ТЧНоменклатура Цикл
		Движение = Движения.Продажи.Добавить();
		ЗаполнитьЗначенияСвойств(Движение, стр);
		Движение.Период = Дата;
		Движение.ПериодФилиал = Дата + СмещениеВремениСклада;
		Движение.Склад = Склад;
		Движение.Контрагент = Контрагент; 
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

//@skip-check module-region-empty
#Область СлужебныйПрограммныйИнтерфейс
#КонецОбласти

//@skip-check module-region-empty
#Область СлужебныеПроцедурыИФункции
#КонецОбласти
#КонецЕсли