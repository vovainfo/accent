
//@skip-check module-region-empty
#Область ОписаниеПеременных

#КонецОбласти

#Область ОбработчикиСобытийФормы
&НаКлиенте
Процедура ПередЗаписью(Отказ, ПараметрыЗаписи)
	Если НЕ ЗначениеЗаполнено(Объект.Склад) Тогда
		Отказ = Истина;
		ТекстСообщения = НСтр("ru = 'Перед записью необходимо заполнить склад.'"); 
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения,,"Склад", "Объект");		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	НоваяДатаФилиала = ТекущийОбъект.Дата + Объект.СмещениеВремениСклада*3600;
	Если НоваяДатаФилиала <> ТекущийОбъект.ДатаФилиала Тогда
		ТекущийОбъект.ДатаФилиала = НоваяДатаФилиала;
		ТекущийОбъект.Записать();
	КонецЕсли;		
КонецПроцедуры
#КонецОбласти

//@skip-check module-region-empty
#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	Объект.ДатаФилиала = Объект.Дата - Объект.СмещениеВремениСклада*3600;
КонецПроцедуры

&НаКлиенте
Процедура СкладПриИзменении(Элемент)
	Объект.СмещениеВремениСклада = гваОбщегоНазначенияВызовСервера.ЗначениеРеквизитаОбъекта(Объект.Склад, "ВременноеСмещение");
КонецПроцедуры
#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокНоменклатуры
&НаКлиенте
Процедура СписокНоменклатурыКоличествоПриИзменении(Элемент)
	ТекСтрока = Элементы.СписокНоменклатуры.ТекущиеДанные;
	гваОбработкаТабличнойЧастиКлиент.РассчитатьСуммуВСтроке(ТекСтрока);
КонецПроцедуры

&НаКлиенте
Процедура СписокНоменклатурыЦенаПриИзменении(Элемент)
	ТекСтрока = Элементы.СписокНоменклатуры.ТекущиеДанные;
	гваОбработкаТабличнойЧастиКлиент.РассчитатьСуммуВСтроке(ТекСтрока);
КонецПроцедуры
#КонецОбласти

//@skip-check module-region-empty
#Область ОбработчикиКомандФормы
#КонецОбласти

//@skip-check module-region-empty
#Область СлужебныеПроцедурыИФункции
#КонецОбласти
