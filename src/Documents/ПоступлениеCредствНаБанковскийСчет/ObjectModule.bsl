#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

//@skip-check module-region-empty
#Область ПрограммныйИнтерфейс
#КонецОбласти

#Область ОбработчикиСобытий
Процедура ОбработкаЗаполнения(ДанныеЗаполнения,СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.СчетНаОплату") Тогда
		СтандартнаяОбработка = Ложь;
		Основание = ДанныеЗаполнения;
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	СчетНаОплату.Дата,
			|	СчетНаОплату.Склад,
			|	СчетНаОплату.Контрагент,
			|	СчетНаОплату.Основание КАК Сделка,
			|	СчетНаОплату.СуммаПоДокументу,
			|	СчетНаОплату.СмещениеВремениСклада
			|ИЗ
			|	Документ.СчетНаОплату КАК СчетНаОплату
			|ГДЕ
			|	СчетНаОплату.Ссылка = &Ссылка
			|	И СчетНаОплату.Проведен";
		Запрос.Параметры.Вставить("Ссылка", ДанныеЗаполнения);
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Если Выборка.Следующий() Тогда
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, Выборка,, "Дата");				
		Иначе
			ВызватьИсключение НСтр("ru = 'Отсутствует проведённый документ-основание'");
		КонецЕсли;
	Иначе
		ВызватьИсключение НСтр("ru='Документ можно вводить только на основании Счета на оплату'");		 
	КонецЕсли;
КонецПроцедуры

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	//@skip-check bsl-legacy-check-string-literal
	Префикс = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Склад, "Префикс");
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	// регистр РасчетыСКлиентами
	Движения.РасчетыСКлиентами.Записывать = Истина;
	Движение = Движения.РасчетыСКлиентами.ДобавитьРасход();
	Движение.Период = Дата;
	Движение.Контрагент = Контрагент;
	Движение.Сделка = Основание;
	Движение.Сумма = СуммаПоДокументу;
КонецПроцедуры
#КонецОбласти

//@skip-check module-region-empty
#Область СлужебныйПрограммныйИнтерфейс
#КонецОбласти

//@skip-check module-region-empty
#Область СлужебныеПроцедурыИФункции
#КонецОбласти
#КонецЕсли