#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

//@skip-check module-region-empty
#Область ПрограммныйИнтерфейс
#КонецОбласти

#Область ОбработчикиСобытий
Процедура ОбработкаЗаполнения(ДанныеЗаполнения,СтандартнаяОбработка)
	Если ТипЗнч(ДанныеЗаполнения) = Тип("ДокументСсылка.РеализацияТоваровУслуг") Тогда
		СтандартнаяОбработка = Ложь;
		Основание = ДанныеЗаполнения;
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	РеализацияТоваровУслуг.Дата,
			|	РеализацияТоваровУслуг.Склад,
			|	РеализацияТоваровУслуг.Контрагент,
			|	РеализацияТоваровУслуг.СмещениеВремениСклада
			|ИЗ
			|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
			|ГДЕ
			|	РеализацияТоваровУслуг.Ссылка = &Ссылка
			|	И РеализацияТоваровУслуг.Проведен
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	РеализацияТоваровУслугСписокНоменклатуры.Номенклатура,
			|	РеализацияТоваровУслугСписокНоменклатуры.Количество,
			|	РеализацияТоваровУслугСписокНоменклатуры.Цена,
			|	РеализацияТоваровУслугСписокНоменклатуры.Сумма
			|ИЗ
			|	Документ.РеализацияТоваровУслуг.СписокНоменклатуры КАК РеализацияТоваровУслугСписокНоменклатуры
			|ГДЕ
			|	РеализацияТоваровУслугСписокНоменклатуры.Ссылка = &Ссылка
			|	И РеализацияТоваровУслугСписокНоменклатуры.Номенклатура.ВидНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ВидыНоменклатуры.Товар)";
		Запрос.Параметры.Вставить("Ссылка", ДанныеЗаполнения);
		
		РезультатПакет = Запрос.ВыполнитьПакет();
		
		ВыборкаШапка = РезультатПакет[0].Выбрать();
		ВыборкаНоменклатура = РезультатПакет[1].Выбрать();
		
		Если ВыборкаШапка.Следующий() Тогда
			Если ВыборкаНоменклатура.Количество() = 0 Тогда
				ВызватьИсключение НСтр("ru = 'В документе-основании отсутствуют товары'");
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(ЭтотОбъект, ВыборкаШапка, "Дата, Склад, Контрагент, СмещениеВремениСклада");				
		Иначе
			ВызватьИсключение НСтр("ru = 'Отсутствует проведённый документ-основание'");
		КонецЕсли;
		
		Пока ВыборкаНоменклатура.Следующий() Цикл
			НоваяСтрока = СписокНоменклатуры.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ВыборкаНоменклатура);			
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура ПриУстановкеНовогоНомера(СтандартнаяОбработка, Префикс)
	Префикс = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Склад, "Префикс");
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	СуммаПоДокументу = СписокНоменклатуры.Итог("Сумма");
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, Режим)
	МетодСписанияСебестоимости = гваУчетнаяПолитика.МетодСписанияСебестоимости(Дата);
	Если МетодСписанияСебестоимости = Неопределено Тогда
		ТекстСообщения = НСтр("ru='Не указан метод списания себестоимости в учетной политике'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, , , , Отказ);
		Возврат;
	КонецЕсли;

	Если МетодСписанияСебестоимости = Перечисления.УчетнаяПолитика.Среднее Тогда
		Партия = Документы.ПриходнаяНакладная.ПустаяСсылка();
	Иначе
		Партия = Ссылка;
	КонецЕсли;

	Движения.ОстаткиНоменклатуры.Записывать = Истина;

	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВозвратТовараСписокНоменклатуры.Номенклатура КАК Номенклатура,
	|	СУММА(ВозвратТовараСписокНоменклатуры.Количество) КАК Количество,
	|	СУММА(ВозвратТовараСписокНоменклатуры.Сумма) КАК Сумма
	|ИЗ
	|	Документ.ВозвратТовара.СписокНоменклатуры КАК ВозвратТовараСписокНоменклатуры
	|ГДЕ
	|	ВозвратТовараСписокНоменклатуры.Ссылка = &Ссылка
	|СГРУППИРОВАТЬ ПО
	|	ВозвратТовараСписокНоменклатуры.Номенклатура";

	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл
		Движение = Движения.ОстаткиНоменклатуры.ДобавитьПриход();
		Движение.Период = Дата;
		Движение.Номенклатура = Выборка.Номенклатура;
		Движение.Склад = Склад;
		Движение.Партия = Партия;
		Движение.Количество = Выборка.Количество;
		Движение.Стоимость = Выборка.Сумма;
		Движение.ПериодФилиал = Дата + СмещениеВремениСклада;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

//@skip-check module-region-empty
#Область СлужебныйПрограммныйИнтерфейс
#КонецОбласти

//@skip-check module-region-empty
#Область СлужебныеПроцедурыИФункции
#КонецОбласти
#КонецЕсли