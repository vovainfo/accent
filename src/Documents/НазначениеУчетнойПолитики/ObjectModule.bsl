#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

//@skip-check module-region-empty
#Область ОписаниеПеременных
#КонецОбласти

//@skip-check module-region-empty
#Область ПрограммныйИнтерфейс
#КонецОбласти

#Область ОбработчикиСобытий
Процедура ОбработкаПроведения(Отказ,Режим)
	СтарыйМетодСписанияСебестоимости = гваУчетнаяПолитика.МетодСписанияСебестоимости(Дата - 1);
	Если СтарыйМетодСписанияСебестоимости = МетодСписанияСебестоимости Тогда
		ТекстСообщения = НСтр("ru='Метод списания себестоимости соответствует уже установленному методу'"); 
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,,Отказ);
		Возврат;
	КонецЕсли;

	// регистр УчетнаяПолитика
	Движения.УчетнаяПолитика.Записывать = Истина;
	Движение = Движения.УчетнаяПолитика.Добавить();
	Движение.Период = Дата;
	Движение.МетодСписанияСебестоимости = МетодСписанияСебестоимости;
	
	// регистр ОстаткиНоменклатуры
	Если МетодСписанияСебестоимости = Перечисления.УчетнаяПолитика.Среднее Тогда
		Движения.ОстаткиНоменклатуры.Записывать = Истина;
		Движения.Записать();
		Движения.ОстаткиНоменклатуры.Записывать = Истина;
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ОстаткиНоменклатуры");
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		Блокировка.Заблокировать();

		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ОстаткиНоменклатурыОстатки.Склад КАК Склад,
			|	ОстаткиНоменклатурыОстатки.Номенклатура КАК Номенклатура,
			|	ОстаткиНоменклатурыОстатки.Партия КАК Партия,
			|	ОстаткиНоменклатурыОстатки.КоличествоОстаток КАК Количество,
			|	ОстаткиНоменклатурыОстатки.СтоимостьОстаток КАК Стоимость
			|ИЗ
			|	РегистрНакопления.ОстаткиНоменклатуры.Остатки(&МоментВремени,) КАК ОстаткиНоменклатурыОстатки
			|ИТОГИ
			|	СУММА(Количество),
			|	СУММА(Стоимость)
			|ПО
			|	Склад,
			|	Номенклатура";
		Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
		
		ВыборкаСклад = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаСклад.Следующий() Цикл
			ВыборкаНоменклатура = ВыборкаСклад.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаНоменклатура.Следующий() Цикл
				Движение = Движения.ОстаткиНоменклатуры.ДобавитьПриход();
				ЗаполнитьЗначенияСвойств(Движение, ВыборкаНоменклатура);
				Движение.Период = Дата;
		
				ВыборкаДетальныеЗаписи = ВыборкаНоменклатура.Выбрать();
				Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
					Движение = Движения.ОстаткиНоменклатуры.ДобавитьРасход();
					ЗаполнитьЗначенияСвойств(Движение, ВыборкаДетальныеЗаписи);
					Движение.Период = Дата;			
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

//@skip-check module-region-empty
#Область СлужебныйПрограммныйИнтерфейс
#КонецОбласти

//@skip-check module-region-empty
#Область СлужебныеПроцедурыИФункции
#КонецОбласти

//@skip-check module-region-empty
#Область Инициализация
#КонецОбласти

#КонецЕсли
